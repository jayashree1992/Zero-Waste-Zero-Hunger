/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DonarManager;

import Business.Enterprise.DeliveryEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.NGOEnterprise;
import Business.Food.FoodItem;
import Business.Food.FoodList;
import Business.Network.Network;
import Business.Organization.DeliveryManagerOrganization;
import Business.Organization.DeliveryStaffOrganization;
import Business.Organization.NGOManagerOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.FoodPickUpRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.DonarStaff.DonarStaffRaisePickUpRequestJPanel;

/**
 *
 * @author jayashree
 */
public class DonarManagerViewPickUpRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DonarManagerViewPickUpRequestJPanel
     */
    private JPanel userProcessContainer;
    private Organization donarManagerOrganization;
    private Network network;
    
    public DonarManagerViewPickUpRequestJPanel(JPanel userProcessContainer, Organization donarManagerOrganization, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.donarManagerOrganization = donarManagerOrganization;
        this.network = network;
        populateTable();
        populateNGOEnterpriseComboBox();
    }
    
    private void populateTable(){
        
       
        DefaultTableModel dtm = (DefaultTableModel) viewPickUpRequestTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest wr : donarManagerOrganization.getWorkQueue().getWorkRequestList()){
            FoodPickUpRequest pr = (FoodPickUpRequest) wr;
           
          
            Object row[] = new Object[4];
            row[0] = wr;
            row[1] = wr.getRequestDate();
            row[2] = wr.getSender() == null ? "Not yet Raised" : wr.getSender().getEmployee();
          
            row[3] = pr.getDeliveryPerson() == null ? "Not yet Picked Up" : pr.getDeliveryPerson().getEmployee();
           
            dtm.addRow(row);
            
            
            
            
        }
    }
    
  


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewPickUpRequestTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        ngoEnterpriseComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 228, 140));

        viewPickUpRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Request Raised Date", "Request Raised By", "Collected By"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewPickUpRequestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewPickUpRequestTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(viewPickUpRequestTable);
        if (viewPickUpRequestTable.getColumnModel().getColumnCount() > 0) {
            viewPickUpRequestTable.getColumnModel().getColumn(0).setPreferredWidth(2);
            viewPickUpRequestTable.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Approve Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("View Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel5.setText("Donar Manager Work Area - View Pick Up Requests Raised");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jLabel2.setText("List of Pickup Requests Raised");

        jLabel3.setText("Select NGO to send the request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jButton1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton3)
                            .addGap(28, 28, 28)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ngoEnterpriseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel3)
                    .addComponent(ngoEnterpriseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(72, 72, 72)
                .addComponent(jButton1)
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void populateNGOEnterpriseComboBox() {
        ngoEnterpriseComboBox.removeAllItems();
       
        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof NGOEnterprise) {
                ngoEnterpriseComboBox.addItem(e);
            }
        }

    }
      
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        DefaultTableModel dtm = (DefaultTableModel) viewPickUpRequestTable.getModel();
        
        int selectedRowIndex = viewPickUpRequestTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Select a request to approve");
            return;
        }
        
        
        WorkRequest wr = (WorkRequest) dtm.getValueAt(selectedRowIndex, 0);
        if (!wr.getStatus().equals("Pickup Request Raised")) {
            JOptionPane.showMessageDialog(null, "Request already processed");
            return;
        }
        
        Enterprise ngoEnterprise = (NGOEnterprise) ngoEnterpriseComboBox.getSelectedItem();
        
        if (ngoEnterprise == null) {
            JOptionPane.showMessageDialog(null, "Select a delivery Enterprise");
            return;
        }
        
        
        Organization ngoManagerOrganization = null;
        
        for (Organization o : ngoEnterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof NGOManagerOrganization) {
                ngoManagerOrganization = o;
            }
        }
        
        if (ngoManagerOrganization == null) {
            JOptionPane.showMessageDialog(null, "NGO Manager Organization Not Yet Created");
            return;
        }

        
        wr.setStatus("Forwarded to NGO");
        FoodPickUpRequest pr = (FoodPickUpRequest) wr;
        for(FoodItem fi : pr.getFoodItemList()){
            fi.setNgoName(ngoEnterprise.getName());
        }

        JOptionPane.showMessageDialog(null, "Request approved and sent to NGO Manager for further processing!");
        populateTable();
        
        ngoManagerOrganization.getWorkQueue().getWorkRequestList().add(wr);
        
     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void viewPickUpRequestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewPickUpRequestTableMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_viewPickUpRequestTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel dtm = (DefaultTableModel) viewPickUpRequestTable.getModel();
        
        int selectedRowIndex = viewPickUpRequestTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Select a request to view");
            return;
        }
        
        
        WorkRequest wr = (WorkRequest) dtm.getValueAt(selectedRowIndex, 0);
    
        
      
        
    
        FoodPickUpRequest pr = (FoodPickUpRequest) dtm.getValueAt(selectedRowIndex, 0);
        
        if(pr.getStatus().equals("Pickup Request Raised")){
        
        DonarManagerViewRequestDetailsandEditJPanel donarManagerViewRequestDetailsJPanel = new DonarManagerViewRequestDetailsandEditJPanel(userProcessContainer, pr);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("DonarManagerViewRequestDetailsJPanel", donarManagerViewRequestDetailsJPanel);
        layout.next(userProcessContainer);
        }
        
        else{
        
        DonarManagerViewRequestDetailsJPanel donarManagerViewRequestDetailsJPanel = new DonarManagerViewRequestDetailsJPanel(userProcessContainer, pr);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("DonarManagerViewRequestDetailsJPanel", donarManagerViewRequestDetailsJPanel);
        layout.next(userProcessContainer);
        
        
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox ngoEnterpriseComboBox;
    private javax.swing.JTable viewPickUpRequestTable;
    // End of variables declaration//GEN-END:variables
}
