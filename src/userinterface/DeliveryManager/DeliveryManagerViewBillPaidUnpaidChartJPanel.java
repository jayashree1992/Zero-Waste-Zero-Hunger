/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManager;

import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BillingRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author jayashree
 */
public class DeliveryManagerViewBillPaidUnpaidChartJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryManagerViewBillPaidUnpaidChartJPanel
     */
    
    private JPanel userProcessContainer;
    private Organization deliveryManagerOrganization;
            
    public DeliveryManagerViewBillPaidUnpaidChartJPanel(JPanel userProcessContainer, Organization deliveryManagerOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.deliveryManagerOrganization = deliveryManagerOrganization;
        populatePaidUnpaidChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numberOfBillGraph = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        amountGraph = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblPaid = new javax.swing.JLabel();
        lblUnPaid = new javax.swing.JLabel();
        lblpaid = new javax.swing.JLabel();
        lblunpaid = new javax.swing.JLabel();
        lblPaid1 = new javax.swing.JLabel();
        lblUnPaid1 = new javax.swing.JLabel();
        lblpaidNo = new javax.swing.JLabel();
        lblunpaidNo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 228, 140));

        numberOfBillGraph.setBackground(new java.awt.Color(255, 255, 204));
        numberOfBillGraph.setLayout(new java.awt.BorderLayout());

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        amountGraph.setBackground(new java.awt.Color(255, 255, 204));
        amountGraph.setLayout(new java.awt.BorderLayout());

        jLabel5.setBackground(new java.awt.Color(255, 228, 140));
        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel5.setText("Delivery Manager Work Area - View Bill Details");

        lblPaid.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPaid.setText("Total Amount Received (Paid) :");

        lblUnPaid.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUnPaid.setText("Total Amount Pending (Un-Paid) :");

        lblpaid.setText("<paid>");

        lblunpaid.setText("<un-paid>");

        lblPaid1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPaid1.setText("Total No. of Bills Paid :");

        lblUnPaid1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUnPaid1.setText("Total No. of Bills Unpaid :");

        lblpaidNo.setText("<No. of paid Bills>");

        lblunpaidNo.setText("<No. of Unpaid Bills>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUnPaid1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPaid1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblpaidNo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblunpaidNo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numberOfBillGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(amountGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUnPaid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblpaid, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblunpaid, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(375, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUnPaid)
                    .addComponent(lblunpaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaid1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpaidNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUnPaid1)
                    .addComponent(lblunpaidNo))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(amountGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfBillGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populatePaidUnpaidChart() {

        int paid = 0, unpaid = 0;
        double paidAmount = 0, unpaidAmount = 0;

        for (WorkRequest wr : deliveryManagerOrganization.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof BillingRequest) {
                BillingRequest br = (BillingRequest) wr;
                
                int cost = br.getDeliveryrequest().getCost();
                
                if (br.isBillPaid()) {
                  paid++;
                  paidAmount +=  cost;
                }else{
                  unpaid++;  
                  unpaidAmount +=  cost;
                }
            }
        }
        
        // No. of Paid/Unpaid Bills
        DefaultPieDataset dataSet = new DefaultPieDataset();
        dataSet.setValue("No. of Paid Bills", paid);
        dataSet.setValue("No. of Unpaid Bills", unpaid);
        JFreeChart chart = ChartFactory.createPieChart3D("No. of Paid/Unpaid Bills",dataSet,true, true, true);
        ChartPanel chartPanel = new ChartPanel(chart);

        
        numberOfBillGraph.removeAll();
        numberOfBillGraph.add(chartPanel, BorderLayout.CENTER);
        numberOfBillGraph.validate();
        
        
        // Total amount Paid/Unpaid
        DefaultPieDataset amountDataSet = new DefaultPieDataset();
        amountDataSet.setValue("Total amount Paid($)", paidAmount);
        amountDataSet.setValue("Total amount Unpaid($)", unpaidAmount);
        JFreeChart amountChart = ChartFactory.createRingChart("Total amount Paid/Unpaid",amountDataSet,true, true, true);
        ChartPanel amountChartPanel = new ChartPanel(amountChart);

        
        amountGraph.removeAll();
        amountGraph.add(amountChartPanel, BorderLayout.CENTER);
        amountGraph.validate();

        lblpaid.setText("$ " + paidAmount);
        lblunpaid.setText("$ " + unpaidAmount);
       
        lblpaidNo.setText("" + paid);
        lblunpaidNo.setText("" + unpaid);
       

    }
    
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel amountGraph;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblPaid;
    private javax.swing.JLabel lblPaid1;
    private javax.swing.JLabel lblUnPaid;
    private javax.swing.JLabel lblUnPaid1;
    private javax.swing.JLabel lblpaid;
    private javax.swing.JLabel lblpaidNo;
    private javax.swing.JLabel lblunpaid;
    private javax.swing.JLabel lblunpaidNo;
    private javax.swing.JPanel numberOfBillGraph;
    // End of variables declaration//GEN-END:variables
}
